<?xml version="1.0" encoding="utf-8" ?>
<project name="BuildRunner" default="compile" xmlns="http://nant.sf.net/schemas/nant.xsd">

  <loadtasks assembly="..\lib\GallioBundle-3.2.603.0\bin\Gallio.NAntTasks.dll" />
  <property name="DotNetFrameworkDir" value="${path::combine(environment::get-variable('SystemRoot'), 'Microsoft.NET\Framework\v3.5')}" />
  <property name="Configuration" value="DEBUG" />

  <property name="Folder.Source" value="." />
  <property name="Folder.Tests" value="${path::combine(path::combine(path::combine(Folder.Source, 'jeza.ioFTPD.Tests'), 'bin'), Configuration)}" />
  <property name="Folder.ZipScript" value="${path::combine(path::combine(path::combine(Folder.Source, 'jeza.ioFTPD.ZipScript'), 'bin'), Configuration)}" />
  <property name="Folder.Framework" value="${path::combine(path::combine(path::combine(Folder.Source, 'jeza.ioFTPD.Framework'), 'bin'), Configuration)}" />
  <property name="Folder.TestResults" value="${path::combine(Folder.Source, 'TestResults')}" />
  <property name="Folder.BuildOutput" value="${path::combine(Folder.Source, 'jeza.ioFTPD.Tools')}" />

  <property name="File.Solution" value="jeza.ioFTPD.Tools.sln" />
  <property name="File.Tests" value="${path::combine(Folder.Tests, 'jeza.ioFTPD.Tests.dll')}" />
  <property name="File.TestResults" value="Results" />
  <property name="File.MSBuild" value="${path::combine(DotNetFrameworkDir, 'msbuild.exe')}" />
  <property name="File.UpdateVersion" value="..\lib\UpdateVersion.exe" />
  <property name="File.AssemblyInfo.Framework" value="jeza.ioFTPD.Framework\Properties\AssemblyInfo.cs" />
  <property name="File.AssemblyInfo.ZipScript" value="jeza.ioFTPD.ZipScript\Properties\AssemblyInfo.cs" />
  <property name="File.AssemblyInfo.Tests" value="jeza.ioFTPD.Tests\Properties\AssemblyInfo.cs" />
  
  <property name="Version" value="2.0.0.0" />

  <target name="clean" descripton="Removes output files and directories.">
    <delete includeemptydirs="true" failonerror="true">
      <fileset basedir="${Folder.Source}">
        <include name="_ReSharper.*/**"/>
        <include name="**/*.user"/>
        <include name="**/*.suo"/>
        <include name="**/*.ncb"/>
        <include name="**/*.cache"/>
      </fileset>
    </delete>
  </target>

  <target name="compile" depends="clean" descripton="Compile solution">
    <exec program="${File.MSBuild}" workingdir="${Folder.Source}" verbose="true">
      <arg value="/property:Configuration=${Configuration}" />
      <arg value="/target:Rebuild" />
      <arg value="/consoleloggerparameters:NoSummary" />
      <arg value="${File.Solution}" />
    </exec>
    <call target="copy.build" />
  </target>

  <target name="test" descripton="Run unit tests">
    <call target="compile" />
    <echo>report-directory=${Folder.TestResults}</echo>
    <echo>report-name-format=${File.TestResults}</echo>
    <echo>test-file=${File.Tests}</echo>
    <echo>report-types=Html;Xml;Text</echo>
    <gallio
      report-directory="${Folder.TestResults}"
      report-name-format="${File.TestResults}"
      report-types="Html;Xml;Text"
      echo-results="true"
      failonerror="false">
      <files>
        <include name="${File.Tests}" />
      </files>
    </gallio>
  </target>

  <target name="copy.build" description="Copies script files to release directory">
    <copy todir="${path::combine(Folder.BuildOutput, 'jeza.ioFTPD.ZipScript')}">
      <fileset basedir="${Folder.ZipScript}">
        <include name="jeza.ioFTPD.ZipScript.exe" />
        <include name="*.dll" />
      </fileset>
    </copy>

    <copy todir="${path::combine(Folder.BuildOutput, 'jeza.ioFTPD.Framework')}">
      <fileset basedir="${Folder.Framework}">
        <include name="*.dll" />
      </fileset>
    </copy>

    <copy todir="${path::combine(Folder.BuildOutput, 'jeza.ioFTPD.Tests')}">
      <fileset basedir="${Folder.Tests}">
        <include name="*.*" />
      </fileset>
    </copy>
  </target>

  <target name="version.increment" description="Updates version number using UpdateVersion.exe">
    <exec program="${File.UpdateVersion}" commandline="-r Increment -b BuildDay -i ${File.AssemblyInfo.Framework} -o ${File.AssemblyInfo.Framework}" verbose="true" failonerror="true" />
    <exec program="${File.UpdateVersion}" commandline="-v File -r Increment -b BuildDay -i ${File.AssemblyInfo.Framework} -o ${File.AssemblyInfo.Framework}" verbose="true" failonerror="true" />
    <exec program="${File.UpdateVersion}" commandline="-r Increment -b BuildDay -i ${File.AssemblyInfo.ZipScript} -o ${File.AssemblyInfo.ZipScript}" verbose="true" failonerror="true" />
    <exec program="${File.UpdateVersion}" commandline="-v File -r Increment -b BuildDay -i ${File.AssemblyInfo.ZipScript} -o ${File.AssemblyInfo.ZipScript}" verbose="true" failonerror="true" />
    <exec program="${File.UpdateVersion}" commandline="-r Increment -b BuildDay -i ${File.AssemblyInfo.Tests} -o ${File.AssemblyInfo.Tests}" verbose="true" failonerror="true" />
    <exec program="${File.UpdateVersion}" commandline="-v File -r Increment -b BuildDay -i ${File.AssemblyInfo.Tests} -o ${File.AssemblyInfo.Tests}" verbose="true" failonerror="true" />
  </target>

  <target name="release" description="Prepares new versioned release">
    <call target="version.increment" />
    <call target="test" />
  </target>

</project>

